name: CI

on:
  push:
    # Avoid duplicate builds on PRs.
    branches:
      - main
    tags:
      - v*
  pull_request:

permissions:
  contents: read

jobs:
  shellcheck:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run shellcheck
        run: find . -type f \( -name "*.sh" -o -path "*/bin/*" \) ! -name '*.jq' | xargs -t shellcheck
  build-stack:
    runs-on: ubuntu-22.04
    needs:
      - shellcheck
    env:
      STACK: heroku-${{ matrix.stack-version }}
      STACK_VERSION: "${{ matrix.stack-version }}"
      DOCKER_HUB_TOKEN: "${{ secrets.DOCKER_HUB_TOKEN }}"
      DOCKER_HUB_USERNAME: "${{ secrets.DOCKER_HUB_USERNAME }}"
      ID_SERVICE_PASSWORD: "${{ secrets.ID_SERVICE_PASSWORD }}"
      ID_SERVICE_TOKEN_ENDPOINT: "${{ secrets.ID_SERVICE_TOKEN_ENDPOINT }}"
      ID_SERVICE_USERNAME: "${{ secrets.ID_SERVICE_USERNAME }}"
      INTERNAL_REGISTRY_HOST: "${{ secrets.INTERNAL_REGISTRY_HOST }}"
      INTERNAL_REGISTRY_USERNAME: "${{ secrets.INTERNAL_REGISTRY_USERNAME }}"
      MANIFEST_APP_TOKEN: "${{ secrets.MANIFEST_APP_TOKEN }}"
      MANIFEST_APP_URL: "${{ secrets.MANIFEST_APP_URL }}"
    strategy:
      matrix:
        stack-version: ["18", "20", "22"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build images
        run: bin/build.sh $STACK_VERSION
      - name: Check that the generated files are in sync
        run: |-
          status="$(git status --porcelain)"
          if [[ -n "$status" ]]; then
            echo "Generated files differ from checked-in versions! Run bin/build.sh to regenerate them locally."
            echo -e "\nChanged files:\n${status}\n"
            git diff
            exit 1
          fi
      - name: Publish to image registries
        run: bin/publish-to-registries.sh
        if: success() && (github.ref_name == 'main' || github.ref_type == 'tag')
      - name: Convert docker image and release to Heroku staging
        run: bin/convert-and-publish-to-heroku.sh
        if: success() && github.ref_type == 'tag'
